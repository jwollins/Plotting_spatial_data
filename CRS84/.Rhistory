# Calculates mean, sd, se and IC
my_sum <- data %>%
group_by(Tillage, Traffic) %>%
summarise(
n=n(),
mean=mean(BD),
sd=sd(BD)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Organise factors
my_sum$Traffic <- as.factor(my_sum$Traffic)
my_sum$Tillage <- as.factor(my_sum$Tillage)
table(my_sum$Traffic, my_sum$Tillage)
## 02 Graph ##
# Error bars represent standard error of the mean/ this graph includes all depths together.
f <- ggplot(my_sum, aes(x=Tillage, y=mean, fill=Traffic)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per tillage treatment (10-20 cm)",x="Tillage", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
# per traffic treatment
f <- ggplot(my_sum, aes(x=Traffic, y=mean, fill=Tillage)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per traffic treatment (10-20 cm)",x="Traffic", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
##Ana new script to see interaction between blocks visually##
data$Block <- factor(data$Block)
data$Traffic <- factor(data$Traffic)
data$Tillage <- factor(data$Tillage, ordered = T)
table(data$Plot); length(table(data$Plot))
summary(data$BD)
interaction.plot(x.factor = data$Traffic,  #Block 4 looks quite different
trace.factor = data$Block, #If blocks don't matter they will be all the lines on top of one another
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Block,  #All Blocks looks very different
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Traffic, #similar trend
response = data$BD)
#diagnose block
boxplot(BD ~ Block, data = data)
etaSquared(aov(BD ~ Block, data = data))
etaSquared(aov(BD ~ Traffic, data = data))
etaSquared(aov(BD ~ Tillage, data = data))
#the proportion of total variance explanined by block is 11%, 26% Traffic and Tillage is 0.055%.
boxplot(BD ~ Traffic + Tillage, data = data,
ylim = c(1.2,2), xaxt='n', xlab='',
col = c('gray20', 'gray70', 'white'),
at = c(1,2,3,5,6,7,9,10,11))
stripchart(BD ~ Traffic + Tillage, data = data,
ylim = c(4,6), add = T, vertical = T,
method = 'jitter', pch = 16, cex = .5,
at = c(1,2,3,5,6,7,9,10,11), col = 'red')
axis(side = 1, at = c(2,6,10), tick = F, line = -0.5,
labels = c('Deep', 'Shallow', 'Zero'))
axis(side = 1, at = c(6), tick = F, line = 1,
labels = c('Tillage'))
legend(x = 10, y = 1.5,
legend = c('CTF', 'LTF', 'STP'),
pch = 22, pt.bg = c('gray20', 'gray70', 'white'),
title = 'Traffic', bty='n')
## 03 Stats ##
#Mixed effect model with random effect blcok and interaction effect. If you are interested
#in interaction only consider this one
lme1 <- lmer(BD ~ Tillage * Traffic + (1|Block), data = data)
summary(lme1)
plot(lme1)
anova(lme1)
r.squaredGLMM(lme1)
plot_model(lme1, show.values = TRUE, show.p = TRUE)
,
levels = ("Zero","Shallow","Deep")
data$Block <- factor(data$Block)
# Some stats calculations
min(data$BD) # min
max(data$BD) # max
mean(data$BD)
mean(data$BD, na.rm = TRUE) #if there is at least one missing value in your dataset, use mean(combine_data$Yield, na.rm = TRUE) to compute the mean with the NA excluded. This argument can be used for most functions, not only the mean
median(data$BD) # median
sd(data$BD) # standard deviation
var(data$BD) # variance
summary(data) # You can compute the minimum,first quartile, median, mean, third
# quartile and the maximum for all numeric variables of a dataset at once using summary()
# Calculates mean, sd, se and IC
my_sum <- data %>%
group_by(Tillage, Traffic) %>%
summarise(
n=n(),
mean=mean(BD),
sd=sd(BD)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Organise factors
my_sum$Traffic <- as.factor(my_sum$Traffic)
my_sum$Tillage <- as.factor(my_sum$Tillage)
table(my_sum$Traffic, my_sum$Tillage)
## 02 Graph ##
# Error bars represent standard error of the mean/ this graph includes all depths together.
f <- ggplot(my_sum, aes(x=Tillage, y=mean, fill=Traffic)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per tillage treatment (10-20 cm)",x="Tillage", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
# per traffic treatment
f <- ggplot(my_sum, aes(x=Traffic, y=mean, fill=Tillage)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per traffic treatment (10-20 cm)",x="Traffic", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
##Ana new script to see interaction between blocks visually##
data$Block <- factor(data$Block)
data$Traffic <- factor(data$Traffic)
data$Tillage <- factor(data$Tillage, ordered = T,
levels = ("Zero","Shallow","Deep"))
table(data$Plot); length(table(data$Plot))
summary(data$BD)
interaction.plot(x.factor = data$Traffic,  #Block 4 looks quite different
trace.factor = data$Block, #If blocks don't matter they will be all the lines on top of one another
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Block,  #All Blocks looks very different
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Traffic, #similar trend
response = data$BD)
#diagnose block
boxplot(BD ~ Block, data = data)
etaSquared(aov(BD ~ Block, data = data))
etaSquared(aov(BD ~ Traffic, data = data))
etaSquared(aov(BD ~ Tillage, data = data))
#the proportion of total variance explanined by block is 11%, 26% Traffic and Tillage is 0.055%.
boxplot(BD ~ Traffic + Tillage, data = data,
ylim = c(1.2,2), xaxt='n', xlab='',
col = c('gray20', 'gray70', 'white'),
at = c(1,2,3,5,6,7,9,10,11))
stripchart(BD ~ Traffic + Tillage, data = data,
ylim = c(4,6), add = T, vertical = T,
method = 'jitter', pch = 16, cex = .5,
at = c(1,2,3,5,6,7,9,10,11), col = 'red')
axis(side = 1, at = c(2,6,10), tick = F, line = -0.5,
labels = c('Deep', 'Shallow', 'Zero'))
axis(side = 1, at = c(6), tick = F, line = 1,
labels = c('Tillage'))
legend(x = 10, y = 1.5,
legend = c('CTF', 'LTF', 'STP'),
pch = 22, pt.bg = c('gray20', 'gray70', 'white'),
title = 'Traffic', bty='n')
## 03 Stats ##
#Mixed effect model with random effect blcok and interaction effect. If you are interested
#in interaction only consider this one
lme1 <- lmer(BD ~ Tillage * Traffic + (1|Block), data = data)
summary(lme1)
plot(lme1)
anova(lme1)
r.squaredGLMM(lme1)
plot_model(lme1, show.values = TRUE, show.p = TRUE)
data <- read.csv("/Users/u1764794/OneDrive - Harper Adams University/Resources/ANOVA_code/DB_10_20.csv")
data$Block <- factor(data$Block)
# Some stats calculations
min(data$BD) # min
max(data$BD) # max
mean(data$BD)
mean(data$BD, na.rm = TRUE) #if there is at least one missing value in your dataset, use mean(combine_data$Yield, na.rm = TRUE) to compute the mean with the NA excluded. This argument can be used for most functions, not only the mean
median(data$BD) # median
sd(data$BD) # standard deviation
var(data$BD) # variance
summary(data) # You can compute the minimum,first quartile, median, mean, third
# quartile and the maximum for all numeric variables of a dataset at once using summary()
# Calculates mean, sd, se and IC
my_sum <- data %>%
group_by(Tillage, Traffic) %>%
summarise(
n=n(),
mean=mean(BD),
sd=sd(BD)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Organise factors
my_sum$Traffic <- as.factor(my_sum$Traffic)
my_sum$Tillage <- as.factor(my_sum$Tillage)
table(my_sum$Traffic, my_sum$Tillage)
## 02 Graph ##
# Error bars represent standard error of the mean/ this graph includes all depths together.
f <- ggplot(my_sum, aes(x=Tillage, y=mean, fill=Traffic)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per tillage treatment (10-20 cm)",x="Tillage", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
# per traffic treatment
f <- ggplot(my_sum, aes(x=Traffic, y=mean, fill=Tillage)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per traffic treatment (10-20 cm)",x="Traffic", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
##Ana new script to see interaction between blocks visually##
data$Block <- factor(data$Block)
data$Traffic <- factor(data$Traffic)
data$Tillage <- factor(data$Tillage, ordered = T,
levels = ("Zero","Shallow","Deep"))
table(data$Plot); length(table(data$Plot))
summary(data$BD)
interaction.plot(x.factor = data$Traffic,  #Block 4 looks quite different
trace.factor = data$Block, #If blocks don't matter they will be all the lines on top of one another
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Block,  #All Blocks looks very different
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Traffic, #similar trend
response = data$BD)
#diagnose block
boxplot(BD ~ Block, data = data)
etaSquared(aov(BD ~ Block, data = data))
etaSquared(aov(BD ~ Traffic, data = data))
etaSquared(aov(BD ~ Tillage, data = data))
#the proportion of total variance explanined by block is 11%, 26% Traffic and Tillage is 0.055%.
boxplot(BD ~ Traffic + Tillage, data = data,
ylim = c(1.2,2), xaxt='n', xlab='',
col = c('gray20', 'gray70', 'white'),
at = c(1,2,3,5,6,7,9,10,11))
stripchart(BD ~ Traffic + Tillage, data = data,
ylim = c(4,6), add = T, vertical = T,
method = 'jitter', pch = 16, cex = .5,
at = c(1,2,3,5,6,7,9,10,11), col = 'red')
axis(side = 1, at = c(2,6,10), tick = F, line = -0.5,
labels = c('Deep', 'Shallow', 'Zero'))
axis(side = 1, at = c(6), tick = F, line = 1,
labels = c('Tillage'))
legend(x = 10, y = 1.5,
legend = c('CTF', 'LTF', 'STP'),
pch = 22, pt.bg = c('gray20', 'gray70', 'white'),
title = 'Traffic', bty='n')
## 03 Stats ##
#Mixed effect model with random effect blcok and interaction effect. If you are interested
#in interaction only consider this one
lme1 <- lmer(BD ~ Tillage * Traffic + (1|Block), data = data)
summary(lme1)
plot(lme1)
anova(lme1)
r.squaredGLMM(lme1)
plot_model(lme1, show.values = TRUE, show.p = TRUE)
#post hoc test tukey mixed effects with interaction
lsmeans(lme1, pairwise~Tillage*Traffic, adjust="tukey")
lsmeans(lme1, pairwise~Traffic, adjust="tukey") #Maybe run this without the interaction as the ANOVA shows that Tillage has no sig difference?
library(lmerTest)
difflsmeans(lme1, test.effs = "Group", adjust = "tukey")
data <- read.csv("/Users/u1764794/OneDrive - Harper Adams University/Resources/ANOVA_code/DB_10_20.csv")
# Add Factors for the raw data
data$Block <- factor(data$Block)
data$Traffic <- as.factor(data$Traffic)
data$Tillage <- as.factor(data$Tillage)
table(data$Traffic, data$Tillage)
# Some stats calculations
min(data$BD) # min
max(data$BD) # max
mean(data$BD)
mean(data$BD, na.rm = TRUE) #if there is at least one missing value in your dataset, use mean(combine_data$Yield, na.rm = TRUE) to compute the mean with the NA excluded. This argument can be used for most functions, not only the mean
median(data$BD) # median
sd(data$BD) # standard deviation
var(data$BD) # variance
summary(data) # You can compute the minimum,first quartile, median, mean, third
# quartile and the maximum for all numeric variables of a dataset at once using summary()
# Calculates mean, sd, se and IC
my_sum <- data %>%
group_by(Tillage, Traffic) %>%
summarise(
n=n(),
mean=mean(BD),
sd=sd(BD)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Organise factors
my_sum$Traffic <- as.factor(my_sum$Traffic)
my_sum$Tillage <- as.factor(my_sum$Tillage)
table(my_sum$Traffic, my_sum$Tillage)
## 02 Graph ####
# Error bars represent standard error of the mean/ this graph includes all depths together.
f <- ggplot(my_sum, aes(x=Tillage, y=mean, fill=Traffic)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per tillage treatment (10-20 cm)",x="Tillage", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
# per traffic treatment
f <- ggplot(my_sum, aes(x=Traffic, y=mean, fill=Tillage)) +
geom_bar(position=position_dodge(), stat="Identity") + labs(title="Average Dry Bulk Density per traffic treatment (10-20 cm)",x="Traffic", y = "Density (g cm-3)") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
f
##Ana new script to see interaction between blocks visually##
data$Block <- factor(data$Block)
data$Traffic <- factor(data$Traffic)
tillage_levels <- c("Zero","Shallow","Deep")
data$Tillage <- factor(data$Tillage, ordered = T, levels = tillage_levels)
table(data$Plot); length(table(data$Plot))
summary(data$BD)
interaction.plot(x.factor = data$Traffic,  #Block 4 looks quite different
trace.factor = data$Block, #If blocks don't matter they will be all the lines on top of one another
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Block,  #All Blocks looks very different
response = data$BD)
interaction.plot(x.factor = data$Tillage,
trace.factor = data$Traffic, #similar trend
response = data$BD)
#diagnose block
boxplot(BD ~ Block, data = data)
etaSquared(aov(BD ~ Block, data = data))
etaSquared(aov(BD ~ Traffic, data = data))
etaSquared(aov(BD ~ Tillage, data = data))
#the proportion of total variance explanined by block is 11%, 26% Traffic and Tillage is 0.055%.
boxplot(BD ~ Traffic + Tillage, data = data,
ylim = c(1.2,2), xaxt='n', xlab='',
col = c('gray20', 'gray70', 'white'),
at = c(1,2,3,5,6,7,9,10,11))
stripchart(BD ~ Traffic + Tillage, data = data,
ylim = c(4,6), add = T, vertical = T,
method = 'jitter', pch = 16, cex = .5,
at = c(1,2,3,5,6,7,9,10,11), col = 'red')
axis(side = 1, at = c(2,6,10), tick = F, line = -0.5,
labels = c('Deep', 'Shallow', 'Zero'))
axis(side = 1, at = c(6), tick = F, line = 1,
labels = c('Tillage'))
legend(x = 10, y = 1.5,
legend = c('CTF', 'LTF', 'STP'),
pch = 22, pt.bg = c('gray20', 'gray70', 'white'),
title = 'Traffic', bty='n')
## 03 Stats ####
#Mixed effect model with random effect blcok and interaction effect. If you are interested
#in interaction only consider this one
lme1 <- lmer(BD ~ Tillage * Traffic + (1|Block), data = data)
summary(lme1)
plot(lme1)
anova(lme1)
r.squaredGLMM(lme1)
plot_model(lme1, show.values = TRUE, show.p = TRUE)
#post hoc test tukey mixed effects with interaction
lsmeans(lme1, pairwise~Tillage*Traffic, adjust="tukey")
library(lmerTest)
difflsmeans(lme1, test.effs = "Group", adjust = "tukey")
ca_points <- datCA %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
suppressPackageStartupMessages({
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
library(magrittr)
library(ggpubr)
library(sp)
library(gstat)
library(sf)
library(rgdal)
library(raster)
library(gridExtra)
library(png)
library(grid)
library(jpeg)
library(cowplot)
})
#setwd
setwd("/Users/u1764794/OneDrive - Harper Adams University/Data/Shapefiles/CRS84/")
csvdat <- read.csv(file = "OMNIA RESULTS/F1_BOTH_OMNIA_SCAN_CRS84.csv", header = TRUE)
# filter to CON system
datCON <- csvdat %>% filter(Treat == "CON")
# filter to CA system
datCA <- csvdat %>% filter(Treat_ac == "CA")
gghistogram(csvdat$OrganicC)
title_exp <- expression(Orgainc~C~ha^{-1})  # this is the legend title with correct notation
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
con_points <- datCON %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
con_points
ca_points <- datCA %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
ca_points
# filter to CA system
datCA <- csvdat %>% filter(Treat_ac == "CA")
# filter to CA system
datCA <- csvdat %>% filter(Treat == "CA")
ca_points <- datCA %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
ca_points
?ggplot
ggplot(data = csvdat) +
geom_point(aes(Longitude, Latitude))
ggplot(data = csvdat) +
geom_point(data = OrgainC, aes(Longitude, Latitude)) +
geom_point()
ggplot(data = csvdat) +
geom_point(data = csvdat$OrgainC, aes(Longitude, Latitude)) +
geom_point()
ggplot(data = csvdat) +
geom_point(aes(Longitude, Latitude)) +
geom_point()
ggplot(data = csvdat) +
geom_point(aes(Longitude, Latitude))
ggplot(data = csvdat) +
geom_point(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25)
ggplot(data = csvdat, aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25)
ggplot(data = datCA, aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25)
ggplot(data = datCA, aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) +
ggplot(data = datCON, aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="red", alpha=0.25)
ggplot(data = datCA, aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC), color="black", alpha=0.25) +
geom_point(aes(size=datCON$OrganicC), color="red", alpha=0.25)
library(automap)
coordinates(csvdat) <-
~ xcoord + ycoord #specify the coordinates in the dataframe
coordinates(csvdat) <-
~ Latitude + Longitude #specify the coordinates in the dataframe
class(csvdat)
vario <-  variogram(OrganicC ~ 1, csvdat)
plot1points
plot1points <- csvdat %>% as.data.frame %>%
ggplot(aes(xcoord, ycoord)) + geom_point(size=1) + coord_equal() +
ggtitle("Points with measurements")
plot1points
f_points
#setwd
setwd("/Users/u1764794/OneDrive - Harper Adams University/Data/Shapefiles/CRS84/")
# Read Data
data <- read.csv(file = "OMNIA RESULTS/F1_BOTH_OMNIA_SCAN_CRS84.csv", header = TRUE)
# Organise factors in data
data$Treat <- as.factor(data$Treat)
ggdensity(data$OrganicC,
main = "OrganicC",
xlab = "OrganicC")
ggqqplot(data$OrganicC)
shapiro.test(data$OrganicC)
gghistogram(data$OrganicC)
# Calculates mean, sd, se and IC - block
my_sum <- data %>%
group_by(Treatment) %>%
summarise(
n=n(),
mean=mean(OrganicC),
sd=sd(OrganicC)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
con_points
?geom_point()
con_points <- datCON %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, group = Treatment), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
con_points
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, group = Treatment), color="black", alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, group = Treatment),  alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, color = Treatment),  alpha=0.25) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, color = Treatment),  alpha=1) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, color = Treatment),  alpha=0.75) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
f_points <- csvdat %>% as.data.frame %>% # Convert to data frame
ggplot(aes(Longitude, Latitude)) +
geom_point(aes(size=OrganicC, color = Treatment),  alpha=0.5) + xlab("x CRS84") + ylab("y CRS84") + labs(subtitle = "Organic C") +
labs(size = title_exp)
f_points
coordinates(csvdat) <-
~ Latitude + Longitude #specify the coordinates in the dataframe
coordinates(datCON) <-
~ Latitude + Longitude #specify the coordinates in the dataframe
f_grid <- read.csv("Data/Both_fields_points_clipped.csv")
